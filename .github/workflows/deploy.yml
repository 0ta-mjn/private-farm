name: Production Deployment

on:
  push:
    branches:
      - "release/**"

jobs:
  deploy-database:
    name: Deploy Database Schema
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Push database schema
        run: pnpm db:push
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  deploy-api:
    name: Deploy API
    runs-on: ubuntu-latest
    needs: deploy-database
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Get latest image tag
        id: get-image-tag
        run: |
          # mainブランチの最新のコミットSHAを取得
          LATEST_SHA=$(git ls-remote https://github.com/${{ github.repository }}.git main | cut -f1)
          echo "image_tag=${LATEST_SHA}" >> $GITHUB_OUTPUT
          echo "Latest main commit SHA: ${LATEST_SHA}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy private-farm-api \
            --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/private-farm-api/api:${{ steps.get-image-tag.outputs.image_tag }} \
            --region=asia-northeast1 \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --memory=512Mi \
            --cpu=1 \
            --min-instances=0 \
            --max-instances=10 \
            --set-env-vars="NODE_ENV=production,API_PORT=8080" \
            --set-secrets="DATABASE_URL=satopod-farm-api-database-url:latest,SUPABASE_URL=satopod-farm-api-supabase-url:latest,SUPABASE_KEY=satopod-farm-api-supabase-key:latest,ACCEPT_ORIGINS=satopod-farm-api-accept-origins:latest"

  deploy-dashboard:
    name: Deploy Dashboard
    runs-on: ubuntu-latest
    needs: deploy-api
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull from Vercel
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel deploy --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
